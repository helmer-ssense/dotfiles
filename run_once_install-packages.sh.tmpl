{{- $fontVersion := .fontVersion -}}
{{- $fonts := .fonts -}}
#!/bin/bash

GREEN="\033[1;32m"
NOCOLOR="\033[0m"
CARGO_PATH="{{ .chezmoi.homeDir }}/.cargo/bin"
APPS_PATH="{{ .linux.appsPath }}"
NVIM_VERSION="v0.9.1"

function exist() {
  command -v "$1" >/dev/null 2>&1
}

function print_msg() {
  echo -e "${GREEN}$1 \n${NOCOLOR}"
}

function install_volta() {
  print_msg "Installing volta"

  if ! exist volta; then
    curl https://get.volta.sh | bash
  fi
}

{{- if eq .chezmoi.os "linux" }}
function setup() {
  mkdir -p "$APPS_PATH"
}

function install_omz() {
  if [ -d {{ .chezmoi.homeDir }}/.oh-my-zsh ]; then
      cd {{ .chezmoi.homeDir }}/.oh-my-zsh/tools
      sh ./install.sh --unattended --keep-zshrc
      cd {{ .chezmoi.homeDir }}
  fi
}

function install_fzf() {
  if [ -d {{ .chezmoi.homeDir }}/.fzf ]; then
    cd {{ .chezmoi.homeDir }}/.fzf
    ./install --all
    cd {{ .chezmoi.homeDir }}
  fi
}

function installing_nerd_fonts() {
  FONT_VERSION="{{ $fontVersion }}"

  print_msg "Installing Nerd Fonts $FONT_VERSION"

  mkdir -p {{ .chezmoi.homeDir }}/.local/share/fonts
  cd {{ .chezmoi.homeDir }}/.local/share/fonts

  declare -a fonts=(
    {{- range $font := $fonts }}
      {{ $font }}
    {{- end }}
  )

  for font in "${fonts[@]}"; do
    if ! [ -f "$font.zip" ]; then
      print_msg "Installing $font"
      wget -q https://github.com/ryanoasis/nerd-fonts/releases/download/${FONT_VERSION}/${font}.zip
      unzip -o "$font.zip"
    fi
  done

  cd {{ .chezmoi.homeDir }}
}

function install_starship() {
  curl -sS https://starship.rs/install.sh | sh -s -- -y
}

function install_rust_and_cargo() {
  if ! exist cargo; then
    print_msg "Installing Rust and Cargo"
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --no-update-default-toolchain
    {{ .chezmoi.homeDir }}/.cargo/bin/rustup default stable
  fi
}

{{-   if (or (eq .chezmoi.osRelease.id "ubuntu") (eq .chezmoi.osRelease.id "linuxmint")) }}
setup

installing_nerd_fonts

if ! exist gcc; then
  sudo nala install -y build-essential
fi

if ! exist diff-so-fancy; then
  print_msg "Installing diff-so-fancy"
  sudo nala install -y diff-so-fancy
fi

if ! exist zsh; then
  sudo nala install -y zsh
fi

install_omz

install_fzf

if ! exist ripgrep; then
  sudo nala install -y ripgrep
fi

if ! exist tmux; then
  print_msg "Installing Tmux"
  sudo nala install -y tmux
fi

if ! exist ag; then
  sudo nala install -y silversearcher-ag
fi

if ! exist wget; then
  sudo nala install -y wget
fi

if ! exist bat; then
  print_msg "Installing Bat"
  sudo nala install -y bat
  ln -s /usr/bin/batcat {{ .linux.appsPath }}/bat
else
  print_msg "Bat already installed. Rebuilding cache..."
  bat cache --build
fi

if ! exist gh; then
  print_msg "Installing Github CLI"
  sudo nala install -y gh
fi

if ! exist vim; then
  print_msg "Installing Vim"
  sudo nala install -y vim
fi

if ! exist lazygit; then
  print_msg "Installing Lazygit"
  LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
  {{ if (eq .chezmoi.arch "arm64") }}
  curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_arm64.tar.gz"
  {{ else }}
  curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
  {{ end }}
  tar xf lazygit.tar.gz lazygit
  sudo install lazygit /usr/local/bin
fi

if [ ! exist nvim ] && [ ! -f /usr/local/bin/nvim ]; then
  sudo nala install -y cmake gettext ninja-build
  cd {{ .linux.neovimSource }}
  make CMAKE_BUILD_TYPE=Release
  make install
  cd {{ .chezmoi.homeDir }}
else
  print_msg "Neovim already installed"
fi

install_volta

install_starship

install_rust_and_cargo

if ! exist exa; then
  "$CARGO_PATH/cargo" install exa
fi
{{-   else if eq .chezmoi.osRelease.id "debian" }}
# TODO
{{-   else if eq .chezmoi.osRelease.id "arch" }}
function installing_nerd_fonts() {
  sudo pacman -S --noconfirm ttf-fantasque-nerd ttf-firacode-nerd
}

installing_nerd_fonts

install_fzf

if ! exist diff-so-fancy; then
  sudo pacman -S --noconfirm diff-so-fancy
fi

if ! exist zsh; then
  sudo pacman -S --noconfirm zsh
fi

install_omz

if ! exist ripgrep; then
  sudo pacman -S --noconfirm ripgrep
fi

if ! exist tmux; then
  sudo pacman -S --noconfirm tmux
fi

if ! exist ag; then
  sudo pacman -S --noconfirm the_silver_searcher
fi

if ! exist bat; then
  sudo pacman -S --noconfirm bat
else
  print_msg "Bat already installed. Rebuilding cache..."
  bat cache --build
fi

if ! exist gh; then
  sudo pacman -S --noconfirm github-cli
fi

if ! exist vim; then
  sudo pacman -S --noconfirm vim
fi

if ! exist exa; then
  sudo pacman -S --noconfirm exa
fi

if ! exist htop; then
  sudo pacman -S --noconfirm htop
fi

if ! exist nvim; then
  sudo pacman -S --no-confirm neovim
fi

if ! exist lazygit; then
  sudo pacman -S --noconfirm lazygit
fi

install_volta

install_starship

install_rust_and_cargo
{{-   else if eq .chezmoi.osRelease.id "fedora" }}
installing_nerd_fonts

if ! exist gcc; then
  sudo dnf install -y @development-tools
fi

if ! exist zsh; then
  sudo dnf install -y zsh --quiet
fi

install_omz

install_fzf

if ! exist diff-so-fancy; then
  sudo dnf install -y diff-so-fancy
fi

if ! exist lazygit; then
  print_msg "Installing lazygit"
  sudo dnf install -y lazygit
fi

if ! exist ripgrep; then
  sudo dnf install -y ripgrep
fi

if ! exist tmux; then
  sudo dnf install -y tmux
fi

if ! exist ag; then
  sudo dnf install -y the_silver_searcher
fi

if ! exist wget; then
  sudo dnf install -y wget
fi

if ! exist bat; then
  sudo dnf install -y bat
else
  print_msg "Bat already installed. Rebuilding cache..."
  bat cache --build
fi

if ! exist gh; then
  sudo dnf install -y gh
fi

if ! exist vim; then
  sudo dnf install -y vim
fi

if ! exist nvim; then
  sudo dnf install -y neovim
fi

install_volta

install_starship

install_rust_and_cargo

if ! exist exa; then
  "$CARGO_PATH/cargo" install exa
fi
{{-   end }}
{{- else if eq .chezmoi.os "darwin" }}
install_volta

if exist bat; then
  bat cache --build
fi

brew bundle --file {{ joinPath .chezmoi.homeDir "Brewfile" | quote }}
{{- end }}
